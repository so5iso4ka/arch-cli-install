#!/usr/bin/env bash

checks() {
    if ! [[ $(id -u) == 0 ]]; then
        echo "Run me as a root."
        exit 1
    fi
}

error() {
    echo "Provide actual answer!"
    exit 1
}

sets() {
    export DISK="/dev/sda"
    export DIR="/mnt"
    export SWP="y"
    export FS="ext4"
    export SWPGB="8GB"
    export HOSTNAME="archlinux"
    export EDITOR="vim"
    export USERNAME="arch"
    export USERPASSWORD="arch"
    export ROOTPASSWORD="root"
    export KERNEL="linux"
    read -p "The defaults is disk $DISK, new root $DIR and $FS it's fs, $SWP to swap option, $USERNAME for user, $USERPASSWORD for user password, $ROOTPASSWORD for root password, $HOSTNAME is hostname, $EDITOR - system editor, default kernel $KERNEL. Override? (y/n): " DFLTS
}

execute() {
    case $DFLTS in
        y | yes | YES | Yes)
            reads
            disks
            strap
        ;;
        n | no | NO | No)
            disks
            strap
        ;;
        *)
            error
        ;;
    esac
}

reads() {
    lsblk
    echo ""
    read -p "Enter device name as listed in lsblk above (eg. /dev/sda): " DISK
    clear
    read -p "Enter new root directory (eg. /mnt): " DIR
    clear
    cat /proc/filesystems
    echo ""
    read -p "Enter file system for root (eg. ext4): " FS
    clear
    read -p "Enter your prefered text editor (eg. vim): " EDITOR
    read -p "Enter your username (eg. arch): " USERNAME
    read -p "Enter password for user: " USERPASSWORD
    read -p "Enter password for root: " ROOTPASSWORD
    read -p "Enter your hostname (eg. archlinux): " HOST
    read -p "Enter linux kernel type to install. Remember - in Arch repo there is only linux, linux-hardened, linux-lts, linux-rt, linux-rt-lts and linux-zen! (eg. linux-lts): " KERNEL
    read -p "Use swap? (y/n): " SWP
}

party() {
    parted $DISK -- mklabel gpt
    parted $DISK -- mkpart ESP fat32 1MB 1GB
    parted $DISK -- set 1 esp on
}

connect() {
    mkfs.ext4 /dev/disk/by-partlabel/root
    mkfs.fat -F 32 /dev/disk/by-partlabel/ESP
    mount /dev/disk/by-partlabel/root $DIR
    mkdir -p $DIR/boot
    mount /dev/disk/by-partlabel/ESP $DIR/boot
}


disks() {
    echo "Disk $DISK parting via parted."
    case $SWP in
        y | yes | YES | Yes)
            read -p "Enter how much GB swap will be. Rationally swap is 1/2 of your current RAM. " SWPGB
            echo "Swap option is enabled, swap is $SWPGB GB!"
            party
            parted $DISK -- mkpart root $FS 1GB -"$SWPGB"GB
            parted $DISK -- mkpart swap linux-swap -"$SWPGB"GB 100%
            echo "Mounting disks into $DIR with swap enabled."
            sleep 3
            connect
            mkswap /dev/disk/by-partlabel/swap
            swapon /dev/disk/by-partlabel/swap
        ;;
        n | no | NO | No)
            echo "Swap option is disabled."
            party
            parted $DISK -- mkpart root $FS 1GB 100%
            echo "Mounting disks into $DIR with swap disabled."
            connect
        ;;
        *)
            error
        ;;
    esac
}



strap() {
    ROOTUUID=$(lsblk -no UUID /dev/disk/by-partlabel/root)
    pacstrap -K $DIR base base-devel binutils $EDITOR
    genfstab -U $DIR >> $DIR/etc/fstab
    echo "en_US.UTF-8 UTF-8" >> $DIR/etc/locale.gen
    echo "LANG=en_US.UTF-8" >> $DIR/etc/locale.conf
    cat > $DIR/etc/hosts << EOF
####################
127.0.0.1 localhost
::1 localhost
####################
EOF
    cat > $DIR/etc/sudoers << EOF
#############################################
root     ALL=(ALL:ALL)    SETENV: ALL
%wheel  ALL=(ALL:ALL)    SETENV: ALL
#############################################
Defaults:root,%wheel env_keep+=TERMINFO_DIRS
Defaults:root,%wheel env_keep+=TERMINFO
#############################################
EOF
    echo $HOST >> $DIR/etc/hostname
    sleep 5
    arch-chroot $DIR /bin/bash << EOF
locale-gen
pacman -Syyu --noconfirm $KERNEL $KERNEL-headers linux-firmware
useradd -m -U -G wheel $USERNAME
echo $ROOTPASSWORD | passwd -s
echo $USERPASSWORD | passwd -s $USER
bootctl install
exit
EOF
    cat > $DIR/boot/loader/entries/arch.conf << EOF
title Arch Linux
linux /vmlinuz-$KERNEL
initrd /initramfs-$KERNEL.img
options root=UUID=$ROOTUUID rw
EOF
}


checks
sets
execute
